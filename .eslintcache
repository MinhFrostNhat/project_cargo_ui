[{"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\index.js":"1","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\reportWebVitals.js":"2","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\App.js":"3","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\Driver.js":"4","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\Rider.js":"5","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\LogIn.js":"6","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\SignUp.js":"7","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\services\\AuthService.js":"8","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\DriverDashboard.js":"9","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\RiderRequest.js":"10","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\DriverDetail.js":"11","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\RiderDashboard.js":"12","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\RiderDetail.js":"13","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\TripCard.js":"14","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\services\\TripService.js":"15","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\TripMedia.js":"16","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\Map.js":"17","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\index.js":"18","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\reportWebVitals.js":"19","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\App.js":"20","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\Driver.js":"21","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\Rider.js":"22","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\SignUp.js":"23","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\LogIn.js":"24","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\services\\AuthService.js":"25","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\DriverDetail.js":"26","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\RiderDashboard.js":"27","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\RiderDetail.js":"28","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\RiderRequest.js":"29","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\TripCard.js":"30","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\services\\TripService.js":"31","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\TripMedia.js":"32","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\Map.js":"33","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\Changepass.js":"34","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\DriverDashboard.js":"35","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\ResetPassword.js":"36","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\ResetPasswordConfirm.js":"37","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\Driverhistory.js":"38","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\Riderhistory.js":"39","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\TripMediaRider.js":"40","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\TripCardRider.js":"41","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\TripCardDriver.js":"42","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\TripMediaDriver.js":"43","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\TripCardRiderhistory.js":"44","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\TripMediaRiderHistory.js":"45","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\Profile.js":"46","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\UI\\Footer.js":"47","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\ProfileDriver.js":"48","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\TripCardDriverHis.js":"49","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\TripMediaDriverHis.js":"50"},{"size":546,"mtime":1628255911638,"results":"51","hashOfConfig":"52"},{"size":362,"mtime":1628094884669,"results":"53","hashOfConfig":"52"},{"size":3996,"mtime":1628525273137,"results":"54","hashOfConfig":"52"},{"size":489,"mtime":1628700561401,"results":"55","hashOfConfig":"52"},{"size":583,"mtime":1628526873803,"results":"56","hashOfConfig":"52"},{"size":2791,"mtime":1628526873747,"results":"57","hashOfConfig":"52"},{"size":7826,"mtime":1628701375001,"results":"58","hashOfConfig":"52"},{"size":642,"mtime":1628701382728,"results":"59","hashOfConfig":"52"},{"size":2235,"mtime":1628701360456,"results":"60","hashOfConfig":"52"},{"size":3369,"mtime":1628526873891,"results":"61","hashOfConfig":"52"},{"size":2942,"mtime":1628701363095,"results":"62","hashOfConfig":"52"},{"size":2277,"mtime":1628526873835,"results":"63","hashOfConfig":"52"},{"size":1269,"mtime":1628526873867,"results":"64","hashOfConfig":"52"},{"size":684,"mtime":1628701377444,"results":"65","hashOfConfig":"52"},{"size":1485,"mtime":1628701387470,"results":"66","hashOfConfig":"52"},{"size":956,"mtime":1628701391841,"results":"67","hashOfConfig":"52"},{"size":1716,"mtime":1628526873771,"results":"68","hashOfConfig":"52"},{"size":546,"mtime":1628255911638,"results":"69","hashOfConfig":"70"},{"size":362,"mtime":1628094884669,"results":"71","hashOfConfig":"70"},{"size":12933,"mtime":1636107797103,"results":"72","hashOfConfig":"70"},{"size":736,"mtime":1633404170226,"results":"73","hashOfConfig":"70"},{"size":818,"mtime":1633404170247,"results":"74","hashOfConfig":"70"},{"size":9244,"mtime":1636463450857,"results":"75","hashOfConfig":"70"},{"size":3838,"mtime":1636113078286,"results":"76","hashOfConfig":"70"},{"size":642,"mtime":1633609010315,"results":"77","hashOfConfig":"70"},{"size":3484,"mtime":1633404170230,"results":"78","hashOfConfig":"70"},{"size":2286,"mtime":1636190778577,"results":"79","hashOfConfig":"70"},{"size":2430,"mtime":1636822923030,"results":"80","hashOfConfig":"70"},{"size":11743,"mtime":1637323294123,"results":"81","hashOfConfig":"70"},{"size":684,"mtime":1628701377444,"results":"82","hashOfConfig":"70"},{"size":1594,"mtime":1636032298596,"results":"83","hashOfConfig":"70"},{"size":7765,"mtime":1636221383292,"results":"84","hashOfConfig":"70"},{"size":1920,"mtime":1636193005267,"results":"85","hashOfConfig":"70"},{"size":2574,"mtime":1629291487287,"results":"86","hashOfConfig":"70"},{"size":2205,"mtime":1636190817422,"results":"87","hashOfConfig":"70"},{"size":3088,"mtime":1636387985386,"results":"88","hashOfConfig":"70"},{"size":4277,"mtime":1636387994229,"results":"89","hashOfConfig":"70"},{"size":1872,"mtime":1636220939877,"results":"90","hashOfConfig":"70"},{"size":2081,"mtime":1633404170254,"results":"91","hashOfConfig":"70"},{"size":7377,"mtime":1636822846219,"results":"92","hashOfConfig":"70"},{"size":780,"mtime":1629347080296,"results":"93","hashOfConfig":"70"},{"size":829,"mtime":1633404170257,"results":"94","hashOfConfig":"70"},{"size":2390,"mtime":1636194020171,"results":"95","hashOfConfig":"70"},{"size":801,"mtime":1635595834883,"results":"96","hashOfConfig":"70"},{"size":2515,"mtime":1636193953122,"results":"97","hashOfConfig":"70"},{"size":16789,"mtime":1636191502748,"results":"98","hashOfConfig":"70"},{"size":1073,"mtime":1636108537604,"results":"99","hashOfConfig":"70"},{"size":17447,"mtime":1632051978068,"results":"100","hashOfConfig":"70"},{"size":904,"mtime":1636220986074,"results":"101","hashOfConfig":"70"},{"size":2197,"mtime":1636220756616,"results":"102","hashOfConfig":"70"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"1gih148",{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"1md3nha",{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"140"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"140"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"140"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"140"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"140"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"140"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"140"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"140"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"140"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"140"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"140"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"140"},"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\index.js",[],["221","222"],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\reportWebVitals.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\App.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\Driver.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\Rider.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\LogIn.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\SignUp.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\services\\AuthService.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\DriverDashboard.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\RiderRequest.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\DriverDetail.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\RiderDashboard.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\RiderDetail.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\TripCard.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\services\\TripService.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\TripMedia.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\project_cargo_ui\\src\\components\\Map.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\index.js",[],["223","224"],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\reportWebVitals.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\App.js",["225"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Button, Container, Nav, Navbar, Card\r\n} from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Link, Redirect, Route, Switch } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport { isDriver, isRider } from './services/AuthService';\r\nimport SignUp from './components/SignUp';\r\nimport LogIn from './components/LogIn';\r\nimport Driver from './components/Driver.js';\r\nimport Rider from './components/Rider.js';\r\nimport ResetPassword from'./components/ResetPassword';\r\nimport ResetPasswordConfirm from './components/ResetPasswordConfirm';\r\nimport Profile from './components/Profile';\r\nimport {Helmet} from \"react-helmet\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './App.css';\r\nimport './Home.css';\r\n\r\n\r\n\r\nimport Footer from './UI/Footer';\r\n\r\n\r\n\r\n\r\nfunction App () {\r\n  const [isLoggedIn, setLoggedIn] = useState(() => {\r\n    return window.localStorage.getItem('taxi.auth') !== null;\r\n  });\r\n\r\n  const logIn = async (email, password) => {\r\n    const url = `${process.env.REACT_APP_API_KEY}/api/Login/`;\r\n    try {\r\n      const response = await axios.post(url, { email, password });\r\n      window.localStorage.setItem(\r\n        'taxi.auth', JSON.stringify(response.data)\r\n      );\r\n      setLoggedIn(true);\r\n      return { response, isError: false };\r\n    }\r\n    catch (error) {\r\n      console.error(error);\r\n      return { response: error, isError: true };\r\n    }\r\n  };\r\n\r\n  const logOut = () => {\r\n    window.localStorage.removeItem('taxi.auth');\r\n    setLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    \r\n    <div>\r\n      \r\n    {!isLoggedIn ? ( <div>\r\n      \r\n      <div>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n        <meta name=\"description\" content />\r\n        <meta name=\"author\" content />\r\n        <title>Let's Go</title>\r\n        {/* Favicon*/}\r\n        <link rel=\"icon\" type=\"image/x-icon\" href=\"assets/favicon.ico\" />\r\n        {/* Bootstrap Icons*/}\r\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css\" rel=\"stylesheet\" />\r\n        {/* Google fonts*/}\r\n        <link href=\"https://fonts.googleapis.com/css?family=Merriweather+Sans:400,700\" rel=\"stylesheet\" />\r\n        <link href=\"https://fonts.googleapis.com/css?family=Merriweather:400,300,300italic,400italic,700,700italic\" rel=\"stylesheet\" type=\"text/css\" />\r\n        {/* SimpleLightbox plugin CSS*/}\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/SimpleLightbox/2.1.0/simpleLightbox.min.css\" rel=\"stylesheet\" />\r\n        {/* Core theme CSS (includes Bootstrap)*/}\r\n        <link href=\"css/styles.css\" rel=\"stylesheet\" />\r\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/SimpleLightbox/2.1.0/simpleLightbox.min.js\"></script>\r\n        {/* Navigation*/}\r\n        <Helmet>\r\n      <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n        </Helmet>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light fixed-top py-3\" id=\"mainNav\">\r\n          <div className=\"container px-4 px-lg-5\">\r\n            <a className=\"navbar-brand\" href=\"/\">Let's go</a>\r\n            <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\" /></button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n              <ul className=\"navbar-nav ms-auto my-2 my-lg-0\">\r\n                <li className=\"nav-item\"><a className=\"nav-link\" href=\"#about\">Contact</a></li>\r\n                <li className=\"nav-item\"><a className=\"nav-link\" href=\"#contact\">About</a></li>\r\n                <li className=\"nav-item\"><a className=\"nav-link\" href=\"/sign-up\">Sign up</a></li>\r\n                <li className=\"nav-item\"><a className=\"nav-link\" href=\"/log-in\">Login</a></li>\r\n              </ul>\r\n              \r\n            </div>\r\n          </div>\r\n        </nav>\r\n        {/* Masthead*/}\r\n        \r\n        <header className=\"masthead\">\r\n        <div> <Container className='pt-3'>\r\n        <Switch >\r\n                \r\n          <Route path='/sign-up' render={() => (\r\n            isLoggedIn ? (\r\n              <Redirect to='/' />\r\n            ) : (\r\n              <SignUp />\r\n            )\r\n          )} />\r\n        <Route path='/reset-password' render={() => (\r\n            isLoggedIn ? (\r\n              <Redirect to='/' />\r\n            ) : (\r\n              <ResetPassword />\r\n            )\r\n          )} />\r\n          <Route path='/ResetPasswordConfirm' render={() => (\r\n            isLoggedIn ? (\r\n              <Redirect to='/' />\r\n            ) : (\r\n              <ResetPasswordConfirm />\r\n            )\r\n          )} />\r\n          <Route path='/log-in' render={() => (\r\n            isLoggedIn ? (\r\n              <Redirect to='/' />\r\n            ) : (\r\n              <LogIn logIn={logIn} />\r\n            )\r\n          )} />\r\n          <Route path='/driver' render={() => (\r\n            <Driver />\r\n          )} />\r\n          <Route path='/rider' render={() => (\r\n            <Rider />\r\n          )} />\r\n        </Switch>\r\n      </Container></div>\r\n          <div className=\"container px-4 px-lg-5 h-100\">\r\n            \r\n            <div className=\"row gx-4 gx-lg-5 h-100 align-items-center justify-content-center text-center\">\r\n              \r\n              <div className=\"col-lg-8 align-self-end\">\r\n                \r\n                <h3 className=\"text-white font-weight-bold\">Welcome to Let's go</h3>\r\n                \r\n                <hr className=\"divider\" />\r\n              </div>\r\n              <div className=\"col-lg-8 align-self-baseline\">\r\n              \r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        {/* About*/}\r\n        <section className=\"page-section bg-primary\" id=\"about\">\r\n          <div className=\"container px-4 px-lg-5\">\r\n            <div className=\"row gx-4 gx-lg-5 justify-content-center\">\r\n              <div className=\"col-lg-8 text-center\">\r\n                <h2 className=\"text-white mt-0\">The shipping cargo application</h2>\r\n                <hr className=\"divider divider-light\" />\r\n                <p className=\"text-white-75 mb-4\">  This project I for research and learning. If you have any questions, please send the email to alotestingalone@gmail.com, and I will reply as quickly as possible. Thank you!</p>\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* Services*/}\r\n        \r\n        {/* Portfolio*/}\r\n        {/* Call to action*/}\r\n        {/* Contact*/}\r\n        <section className=\"page-section\" id=\"contact\">\r\n          <div className=\"container px-4 px-lg-5\">\r\n            <div className=\"row gx-4 gx-lg-5 justify-content-center\">\r\n              <div className=\"col-lg-8 col-xl-6 text-center\">\r\n                <h2 className=\"mt-0\">Let's Get In Touch!</h2>\r\n                <hr className=\"divider\" />\r\n                <p className=\"text-muted mb-5\">I want to design and make the product of web applications useful in daily life. Especially during the coronavirus pandemic, people have to stay at home by doing lockdown. So, I create a web application to handle the problem of delivering cargo for people. They can use my web application to send their goods without going out to the home, which will keep them safe.</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"row gx-4 gx-lg-5 justify-content-center mb-5\">\r\n              <div className=\"col-lg-6\">\r\n                {/* * * * * * * * * * * * * * * **/}\r\n                {/* * * SB Forms Contact Form * **/}\r\n                {/* * * * * * * * * * * * * * * **/}\r\n                {/* This form is pre-integrated with SB Forms.*/}\r\n                {/* To make this form functional, sign up at*/}\r\n                {/* https://startbootstrap.com/solution/contact-forms*/}\r\n                {/* to get an API token!*/}\r\n      \r\n              </div>\r\n            </div>\r\n            <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n          </div>\r\n        </section>\r\n        {/* Footer*/}\r\n        <Footer />\r\n      </div>\r\n\r\n        </div>\r\n          \r\n      ) :(\r\n    <div>\r\n      <Navbar bg='light' expand='lg' variant='light'>\r\n        <LinkContainer to='/'>\r\n          <Navbar.Brand className='logo'>Let's go\r\n          <Switch >\r\n          <Route exact path='/' render={() => (\r\n            <div className='middle-center' >\r\n              \r\n              {\r\n                !isLoggedIn && (\r\n                  <>\r\n                  \r\n                    <Link\r\n                      id='signUp'\r\n                      className='btn btn-primary'\r\n                      to='/sign-up'\r\n                    >Sign up</Link>\r\n                    <Link\r\n                      id='log'\r\n                      className='btn btn-primary'\r\n                      to='/log-in'\r\n                    >Log in</Link>\r\n                  </>\r\n                )\r\n              }\r\n              {\r\n                isRider() && (\r\n                  <Redirect to=\"/rider\"/>\r\n                )\r\n              }\r\n              {\r\n                isDriver() && (\r\n                  <Redirect to=\"/driver\"/>\r\n\r\n                )\r\n              }\r\n            </div>\r\n          )} />\r\n        </Switch>\r\n          \r\n          \r\n          \r\n          \r\n          </Navbar.Brand>\r\n        </LinkContainer>\r\n        <Navbar.Toggle />\r\n        <Navbar.Collapse>\r\n          {\r\n            isRider() && (\r\n              <Nav className='mr-auto'>\r\n                <Link\r\n                      id='Tripre'\r\n                      className='btn btn-info' \r\n                      to='/rider/request'\r\n                    >Request a trip</Link>\r\n                    &ensp;\r\n                    <Link\r\n                      id='Hisrid'\r\n                      className='btn btn-success' \r\n                      to='/rider/history'\r\n                    >My History</Link>\r\n                    &ensp;\r\n                    <Link\r\n                      id='Prorid'\r\n                      className='btn btn-warning' \r\n                      to='/rider/profile'\r\n                    >My Profile</Link>\r\n                    &ensp;\r\n                    \r\n              \r\n            \r\n              </Nav>\r\n            )\r\n          }\r\n          {\r\n            isDriver() && (\r\n              <Nav className='mr-auto'>\r\n              <Link\r\n                      id='HisDrid'\r\n                      className='btn btn-success' \r\n                      to='/driver/history'\r\n                    >My History</Link>\r\n                    &ensp;\r\n              <Link\r\n                      id='ProDrid'\r\n                      className='btn btn-warning' \r\n                      to='/driver/profile'\r\n                    >My Profile</Link>\r\n                    &ensp;\r\n              \r\n                \r\n            </Nav>\r\n            )\r\n          }\r\n          {\r\n            isLoggedIn && (\r\n              <Nav inline className='mr-auto'>\r\n                <Button\r\n                  type='button'\r\n                  className=\"btn-danger\"\r\n                  onClick={() => logOut()}\r\n                >Log out</Button>\r\n              </Nav>\r\n            )\r\n          }\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <Container className='pt-3'>\r\n        <Switch >\r\n                \r\n          <Route path='/sign-up' render={() => (\r\n            isLoggedIn ? (\r\n              <Redirect to='/' />\r\n            ) : (\r\n              <SignUp />\r\n            )\r\n          )} />\r\n        <Route path='/reset-password' render={() => (\r\n            isLoggedIn ? (\r\n              <Redirect to='/' />\r\n            ) : (\r\n              <ResetPassword />\r\n            )\r\n          )} />\r\n          <Route path='/ResetPasswordConfirm' render={() => (\r\n            isLoggedIn ? (\r\n              <Redirect to='/' />\r\n            ) : (\r\n              <ResetPasswordConfirm />\r\n            )\r\n          )} />\r\n          <Route path='/log-in' render={() => (\r\n            isLoggedIn ? (\r\n              <Redirect to='/' />\r\n            ) : (\r\n              <LogIn logIn={logIn} />\r\n            )\r\n          )} />\r\n          <Route path='/driver' render={() => (\r\n            <Driver />\r\n          )} />\r\n          <Route path='/rider' render={() => (\r\n            <Rider />\r\n          )} />\r\n        </Switch>\r\n      </Container>\r\n      <ToastContainer />\r\n      \r\n      <div>\r\n        <Card.Footer>\r\n      <Footer />\r\n    </Card.Footer>\r\n      </div>\r\n    </div>\r\n    )}\r\n    \r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\Driver.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\Rider.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\SignUp.js",["226"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Breadcrumb, Button, Card, Col, Form, Row\r\n} from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport '../UI/Bt.css';\r\n\r\nfunction SignUp (props) {\r\n  const [isSubmitted, setSubmitted] = useState(false);\r\n  const [err,setErr] = useState('');\r\n\r\n  const onSubmit = async (values, actions) => {\r\n    const url = `${process.env.REACT_APP_API_KEY}/api/Signup/`;\r\n    const formData = new FormData();\r\n    formData.append('email', values.email);\r\n    formData.append('first_name', values.first_name);\r\n    formData.append('last_name', values.last_name);\r\n    formData.append('password1', values.password1);\r\n    formData.append('password2', values.password2);\r\n    formData.append('group', values.group);\r\n    formData.append('phone_number', values.phone_number);\r\n    formData.append('image', values.image);\r\n    try {\r\n      await axios.post(url, formData);\r\n      setSubmitted(true);\r\n    }\r\n    catch (response) {\r\n      if (response.response.data.non_field_errors =='Password must match!') {\r\n        setErr('Please check password (Confirm Password must match with Password)!')\r\n        \r\n      }\r\n      const data = response.response.data;\r\n      for (const value in data) {\r\n        actions.setFieldError(value, data[value].join(' '));\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isSubmitted) {\r\n    return <Redirect to='/log-in' />\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col lg={12}>\r\n        <Card className='taget'>\r\n        <Breadcrumb>\r\n          <Breadcrumb.Item href='/'>Home</Breadcrumb.Item>\r\n          <Breadcrumb.Item active>Sign up</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        </Card>\r\n        <Card className='taget' bg = 'light' border=\"secondary\" size='sm'>\r\n          \r\n          <Card.Body>\r\n            <Formik\r\n              initialValues={{\r\n                \r\n                email: '',\r\n                first_name: '',\r\n                last_name: '',\r\n                password1: '',\r\n                password2: '',\r\n                group: 'rider',\r\n                phone_number: '',\r\n                image: []\r\n              }}\r\n              onSubmit={onSubmit}\r\n            >\r\n              {({\r\n                errors,\r\n                handleChange,\r\n                handleSubmit,\r\n                isSubmitting,\r\n                setFieldValue,\r\n                values\r\n              }) => (\r\n                <Form validated onSubmit={handleSubmit}>\r\n                  \r\n                  <Form.Group controlId='email'>\r\n                    <Form.Label>Email:</Form.Label>\r\n                    <Form.Control\r\n                      className={ 'email' in errors ? 'is-invalid' : '' }\r\n                      name='email'\r\n                      onChange={handleChange}\r\n                      required \r\n                      values={values.email = values.email.toLowerCase()}\r\n                      size = \"sm\"\r\n                      \r\n                    />\r\n                    {\r\n                      'email' in errors &&\r\n                      <Form.Control.Feedback type='invalid'>{ errors.email }</Form.Control.Feedback>\r\n                    }\r\n                  </Form.Group>\r\n                  <Form.Group controlId='first_name'>\r\n                    <Form.Label>First name:</Form.Label>\r\n                    <Form.Control\r\n                      className={ 'first_name' in errors ? 'is-invalid' : '' }\r\n                      name='first_name'\r\n                      minLength={2}\r\n                      onChange={handleChange}\r\n                      values={values.firs_tName}\r\n                      required \r\n                      size = \"sm\"\r\n                    />\r\n                    {\r\n                      'first_name' in errors &&\r\n                      <Form.Control.Feedback type='invalid'>{ errors.first_name }</Form.Control.Feedback>\r\n                    }\r\n                  </Form.Group>\r\n                  <Form.Group controlId='last_name'>\r\n                    <Form.Label>Last name:</Form.Label>\r\n                    <Form.Control\r\n                      className={ 'last_name' in errors ? 'is-invalid' : '' }\r\n                      name='last_name'\r\n                      minLength={2}\r\n                      onChange={handleChange}\r\n                      values={values.last_name}\r\n                      required \r\n                      size = \"sm\"\r\n                    />\r\n                    {\r\n                      'last_name' in errors &&\r\n                      <Form.Control.Feedback type='invalid'>{ errors.last_name }</Form.Control.Feedback>\r\n                    }\r\n                  </Form.Group>\r\n                  <Form.Group controlId='password1'>\r\n                    <Form.Label>Password:</Form.Label>\r\n                    <Form.Control\r\n                      className={ 'password1' in errors ? 'is-invalid' : '' }\r\n                      name='password1'\r\n                      onChange={handleChange}\r\n                      type='password'\r\n                      value={values.password1}\r\n                      minLength={10}\r\n                      required\r\n                      size = \"sm\"\r\n                    />\r\n                    {\r\n                      'password1' in errors &&\r\n                      <Form.Control.Feedback type='invalid'>{ errors.password1 }</Form.Control.Feedback>\r\n                    }\r\n                  </Form.Group>\r\n\r\n                  <Card.Text><p className=\"err\">{err}</p></Card.Text>\r\n\r\n                  <Form.Group controlId='password2'>\r\n                    <Form.Label>Confirm Password:</Form.Label>\r\n                    <Form.Control\r\n                      className={ 'password2' in errors ? 'is-invalid' : '' }\r\n                      name='password2'\r\n                      onChange={handleChange}\r\n                      type='password'\r\n                      value={values.password2}\r\n                      minLength={10}\r\n                      required\r\n                      size =\"sm\"\r\n                    />\r\n                    {\r\n                      'password2' in errors &&\r\n                      <Form.Control.Feedback type='invalid'>{ errors.password2 }</Form.Control.Feedback>\r\n                    }\r\n                  </Form.Group>\r\n                  <Form.Group controlId='group'>\r\n                    <Form.Label>Group:</Form.Label>\r\n                    <Form.Control\r\n                      as='select'\r\n                      className={ 'group' in errors ? 'is-invalid' : '' }\r\n                      name='group'\r\n                      onChange={handleChange}\r\n                      value={values.group}\r\n                      size =\"sm\"\r\n                    >\r\n                      <option value='rider'>Rider</option>\r\n                      <option value='driver'>Driver</option>\r\n                    </Form.Control>\r\n                    {\r\n                      'group' in errors &&\r\n                      <Form.Control.Feedback type='invalid'>{ errors.group }</Form.Control.Feedback>\r\n                    }\r\n                  </Form.Group>\r\n                  <Form.Group controlId='phone_number'>\r\n                    <Form.Label>Phone_number:</Form.Label>\r\n                    <Form.Control\r\n                      className={ 'phone_number' in errors ? 'is-invalid' : '' }\r\n                      name='phone_number'\r\n                      onChange={handleChange}\r\n                      values={values.phone_number}\r\n                      maxLength ={15}\r\n                      required\r\n                      size =\"sm\"\r\n                    />\r\n                    {\r\n                      'phone_number' in errors &&\r\n                      <Form.Control.Feedback type='invalid'>{ errors.phone_number }</Form.Control.Feedback>\r\n                    }\r\n                  </Form.Group>\r\n                  <Card.Text></Card.Text>\r\n                  <Form.Group controlId='image'>\r\n                    <Form.Label>image:</Form.Label>\r\n                    <Form.Control\r\n                      className={ 'image' in errors ? 'is-invalid' : '' }\r\n                      name='image'\r\n                      size=\"sm\"\r\n                      onChange={event => {\r\n                        setFieldValue('image', event.currentTarget.files[0]);\r\n                      }}\r\n                      type='file'\r\n                      \r\n                      \r\n                    />\r\n                    {\r\n                      'image' in errors &&\r\n                      <Form.Control.Feedback type='invalid'>{ errors.image }</Form.Control.Feedback>\r\n                    }\r\n                  </Form.Group>\r\n                  <Card.Text></Card.Text>\r\n                  <Button className=\"Butt\" block type='submit' variant='primary' >Sign up</Button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Card.Body>\r\n          <p className='mt-1 text-center'>\r\n            Already have an account? <Link to='/log-in'>Log in!</Link>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            Forgot password? <Link to='/reset-password'>Reset password!</Link>\r\n          </p>\r\n         \r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\LogIn.js",["227","228","229"],"import React,{useState} from 'react';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Alert, Breadcrumb, Button, Card, Col, Form, Row\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction LogIn ({ logIn }) {\r\n  const [err,setErr] = useState('');\r\n  const onSubmit = async (values, actions) => {\r\n    try {\r\n      const { response, isError } = await logIn(\r\n        values.email,\r\n        values.password\r\n      );\r\n      if (isError) {\r\n\r\n        if (response.response.data.email =='This field may not be blank.') {\r\n          setErr('Email can not blank')\r\n          \r\n        }\r\n        if (response.response.data.password =='This field may not be blank.') {\r\n          setErr('Password can not blank')\r\n          \r\n        }\r\n        if (response.message ===\"Request failed with status code 401\") {\r\n          setErr('Please check your password and email agian!!!')\r\n          \r\n        }\r\n        \r\n        const data = response.response.data;\r\n        for (const value in data) {\r\n          actions.setFieldError(value, data[value].join(' '));\r\n        }\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col lg={12}>\r\n        <Card className='taget'>\r\n        <Breadcrumb>\r\n          <Breadcrumb.Item href='/'>Home</Breadcrumb.Item>\r\n          <Breadcrumb.Item active>Log in</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        </Card>\r\n        <Card className='taget' border=\"secondary\" >\r\n          <Card.Header>Log in</Card.Header>\r\n          <Card.Body>\r\n            <Formik\r\n              initialValues={{\r\n                email: '',\r\n                password: ''\r\n              }}\r\n              onSubmit={onSubmit} \r\n            >\r\n              {({\r\n                errors,\r\n                handleChange,\r\n                handleSubmit,\r\n                isSubmitting,\r\n                values\r\n              }) => (\r\n                <>\r\n                  {\r\n                    '__all__' in errors &&\r\n                    <Alert variant='danger'>\r\n                      { errors['__all__'] }\r\n                    </Alert>\r\n                  }\r\n                  <Form  onSubmit={handleSubmit}>\r\n                    <Form.Group controlId='email'>\r\n                      <Form.Label>Email</Form.Label>\r\n                      <Form.Control\r\n                        name='email'\r\n                        onChange={handleChange}\r\n                        values={values.email = values.email.toLowerCase()}\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId='password'>\r\n                      <Form.Label>Password:</Form.Label>\r\n                      <Form.Control\r\n                        name='password'\r\n                        onChange={handleChange}\r\n                        type='password'\r\n                        value={values.password}\r\n                      />\r\n                    </Form.Group>\r\n                    <Card.Text><a className=\"err\">{err}</a></Card.Text>\r\n                    <Card.Text></Card.Text>\r\n                    <Button\r\n                      className=\"Butt\"\r\n                      variant=\"success\"\r\n                      block\r\n                      disabled={isSubmitting}\r\n                      type='submit'\r\n                      \r\n                    >Log in</Button>\r\n                    \r\n                  </Form>\r\n                </>\r\n              )}\r\n            </Formik>\r\n          </Card.Body>\r\n          <p className='mt-3 text-center'>\r\n            Don't have an account? <Link to='/sign-up'>Sign up!</Link>\r\n          </p>\r\n          <p className='mt-3 text-center'>\r\n            Forgot password? <Link to='/reset-password'>Reset password!</Link>\r\n          </p>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default LogIn;\r\n","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\services\\AuthService.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\DriverDetail.js",["230"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Breadcrumb, Button, Card, Col, Row\r\n} from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nimport TripMedia from './TripMedia';\r\nimport { getUser } from '../services/AuthService';\r\nimport { getTrip, updateTrip } from '../services/TripService';\r\n\r\nimport '../UI/Bt.css';\r\n\r\n\r\nfunction DriverDetail({ match }) {\r\n  const [trip, setTrip] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadTrip = async (id) => {\r\n      const { response, isError } = await getTrip(id);\r\n      if (isError) {\r\n        setTrip(null);\r\n      } else {\r\n        setTrip(response.data);\r\n      }\r\n    }\r\n    loadTrip(match.params.id);\r\n  }, [match]);\r\n\r\n  const updateTripStatus = (status) => {\r\n    const driver = getUser();\r\n    const updatedTrip = { ...trip, driver, status };\r\n    updateTrip({\r\n      ...updatedTrip,\r\n      driver: updatedTrip.driver.id,\r\n      rider: updatedTrip.rider.id\r\n\r\n    });\r\n    setTrip(updatedTrip);\r\n\r\n  };\r\n\r\n  let tripMedia;\r\n\r\n\r\n  if (trip === null) {\r\n    tripMedia = <>Loading...</>;\r\n  } else {\r\n    tripMedia = (\r\n      <TripMedia\r\n        trip={trip}\r\n        otherGroup='rider'\r\n      />\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    {\r\n\r\n      setTimeout(reloadPage, 15000)\r\n    }\r\n\r\n  });\r\n\r\n\r\n  function reloadPage() {\r\n    if (trip !== null && trip.status === 'REQUESTED') {\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Row>\r\n      <Col lg={12}>\r\n        <Card>\r\n          <Breadcrumb>\r\n            <LinkContainer to='/driver'>\r\n              <Breadcrumb.Item>Dashboard</Breadcrumb.Item>\r\n            </LinkContainer>\r\n            <Breadcrumb.Item active>Trip</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </Card>\r\n        <Card className='mb-3' data-cy='trip-card'>\r\n          <Card.Header>Trip</Card.Header>\r\n          <Card.Body>{tripMedia}</Card.Body>\r\n          <Card.Body>\r\n            {\r\n              trip !== null && trip.status === 'REQUESTED' && (\r\n                <Button\r\n                  className=\"Butt\"\r\n                  data-cy='status-button'\r\n                  block\r\n                  variant=\"primary\"\r\n\r\n                  onClick={() => { updateTripStatus('STARTED') }}\r\n                >Drive to pick up\r\n                </Button>\r\n              )\r\n            }\r\n\r\n            {\r\n              trip !== null && trip.status === 'STARTED' && (\r\n                <Button\r\n                  className=\"Butt\"\r\n                  variant=\"primary\"\r\n                  data-cy='status-button'\r\n                  block\r\n                  onClick={() => updateTripStatus('IN_PROGRESS')}\r\n                >Drive to drop off\r\n                </Button>\r\n              )\r\n            }\r\n\r\n\r\n            {\r\n              trip !== null && trip.status === 'IN_PROGRESS' && (\r\n                <Button\r\n                  className=\"Butt\"\r\n                  data-cy='status-button'\r\n                  block\r\n                  variant='success'\r\n                  onClick={() => updateTripStatus('COMPLETED')}\r\n                >Complete trip\r\n                </Button>\r\n              )\r\n            }\r\n\r\n            {\r\n              trip !== null && !['REQUESTED', 'STARTED', 'IN_PROGRESS'].includes(trip.status) && (\r\n                <span className='text-center'>Completed</span>\r\n              )\r\n            }\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default DriverDetail;\r\n","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\RiderDashboard.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\RiderDetail.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\RiderRequest.js",["231","232","233","234"],"import React, { useEffect, useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Breadcrumb, Button, Card, Col, Form, Row\r\n} from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nimport { getUser } from '../services/AuthService';\r\nimport { createTrip } from '../services/TripService';\r\nimport Map from './Map';\r\nimport { toast } from 'react-toastify';\r\nimport Geocode from \"react-geocode\";\r\nimport { convertDistance, getDistance, getPreciseDistance } from 'geolib';\r\nimport {\r\n\r\n  LoadScript,\r\n\r\n  DistanceMatrixService,\r\n  GoogleMap\r\n} from '@react-google-maps/api';\r\nrequire('dotenv').config();\r\n\r\nfunction RiderRequest(props) {\r\n  const [isSubmitted, setSubmitted] = useState(false);\r\n\r\n  const [lat, setLat] = useState(10.781418);\r\n  const [lng, setLng] = useState(106.698321);\r\n\r\n  const [la, setLatitude] = useState(10.781418);\r\n  const [lang, setLang] = useState(106.698321);\r\n  const [la1, setLatitude1] = useState(10.78238101998759);\r\n  const [lang1, setLang1] = useState(106.69606188685304);\r\n  const [distancee, setDistanc] = useState('');\r\n  const [weight, setWeight] = useState('');\r\n  const [notee, setNote] = useState('None');\r\n  const [inpu, setInpu] = useState('Nhà thờ Đức Bà Sài Gòn, 01 Công xã Paris, Bến Nghé, Quận 1, Thành phố Hồ Chí Minh, Việt Nam');\r\n  const [inpu1, setInpu1] = useState('Nhà thờ Đức Bà Sài Gòn, 01 Công xã Paris, Bến Nghé, Quận 1, Thành phố Hồ Chí Minh, Việt Nam');\r\n\r\n\r\n  const [alo, setalo] = React.useState('');\r\n  const [alo1, setalo1] = React.useState('');\r\n\r\n  const [showFormzphone, setShowFormphone] = useState(false);\r\n\r\n  const showFormphone = () => {\r\n    setShowFormphone(!showFormzphone);\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (window.navigator.geolocation) {\r\n      window.navigator.geolocation.getCurrentPosition((position) => {\r\n        setLat(position.coords.latitude);\r\n        setLng(position.coords.longitude);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const Convert_distance = (convertDistance(distancee, 'km')).toFixed(2)\r\n  let a = 0;\r\n  if (notee === 'Fragile goods') {\r\n    a = ((parseFloat(weight) * 3000 * 1.5 * Math.round(Convert_distance)) + 5000);\r\n  }\r\n  else {\r\n    a = ((parseFloat(weight) * 3000 * Math.round(Convert_distance)) + 5000);\r\n\r\n  }\r\n  const b = Math.round(a)\r\n\r\n  const onSubmit = (values, actions) => {\r\n    const rider = getUser();\r\n    createTrip({\r\n      pick_up_address: values.pickUpAddress,\r\n      drop_off_address: values.dropOffAddress,\r\n      cargo_weight: values.cargo_weight,\r\n      cargo_note: values.cargo_note,\r\n      get_cargo_name: values.get_cargo_name,\r\n      phone_number_get_cargo: values.phone_number_get_cargo,\r\n      cargo_price: b,\r\n      cargo_distance: Convert_distance,\r\n\r\n      rider: rider.id\r\n    });\r\n    try {\r\n      setSubmitted(true)\r\n\r\n    }\r\n    catch {\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  const mapne = process.env.REACT_APP_API_KEY_MAP;\r\n\r\n  Geocode.setApiKey(mapne); //process.env.React_App_Map_API_KEY\r\n\r\n  Geocode.fromAddress(inpu).then(\r\n    response => {\r\n      const { lat, lng } = response.results[0].geometry.location;\r\n      setLatitude(lat);\r\n      setLang(lng);\r\n    },\r\n    error => {\r\n      console.error(error);\r\n    }\r\n  );\r\n  Geocode.fromAddress(inpu1).then(\r\n    response => {\r\n      const { lat, lng } = response.results[0].geometry.location;\r\n      setLatitude1(lat);\r\n      setLang1(lng);\r\n    },\r\n    error => {\r\n      console.error(error);\r\n    }\r\n  );\r\n\r\n  if (isSubmitted) {\r\n    return <Redirect to='/rider' />\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col lg={12}>\r\n        <Card>\r\n          <Breadcrumb>\r\n            <LinkContainer to='/rider'>\r\n              <Breadcrumb.Item>Dashboard</Breadcrumb.Item>\r\n            </LinkContainer>\r\n            <Breadcrumb.Item active>Request</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </Card>\r\n        <Card className='mb-3' bg='light' border=\"secondary\">\r\n          <Card.Header>Request Trip</Card.Header>\r\n          <Card.Body>\r\n            <Formik\r\n              initialValues={{\r\n\r\n                cargo_weight: '',\r\n                cargo_note: 'None',\r\n                get_cargo_name: '',\r\n                phone_number_get_cargo: '',\r\n                pickUpAddress: '',\r\n                dropOffAddress: '',\r\n              }}\r\n              onSubmit={onSubmit}\r\n            >\r\n              {({\r\n                errors,\r\n                handleChange,\r\n                handleSubmit,\r\n                isSubmitting,\r\n                setFieldValue,\r\n                values\r\n              }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Form.Group controlId='get_cargo_name'>\r\n                    <Form.Label>Name of consignee:</Form.Label>\r\n                    <Form.Control\r\n                      className={'get_cargo_name' in errors ? 'is-invalid' : ''}\r\n                      name='get_cargo_name'\r\n                      onChange={handleChange}\r\n                      minLength={2}\r\n                      pattern='^([a-zA-ZÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẾẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềếềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ\\s]+)$'\r\n                      values={values.get_cargo_name}\r\n\r\n                      required\r\n                    />\r\n                    {\r\n                      'get_cargo_name' in errors &&\r\n                      <Form.Control.Feedback type='invalid'>{errors.get_cargo_name}</Form.Control.Feedback>\r\n                    }\r\n                  </Form.Group>\r\n                  <Form.Group controlId='phone_number_get_cargo'>\r\n                    <Form.Label>Phone number of consignee:</Form.Label>\r\n                    <Form.Control\r\n                      className={'phone_number_get_cargo' in errors ? 'is-invalid' : ''}\r\n                      name='phone_number_get_cargo'\r\n                      onChange={handleChange}\r\n                      minLength={8}\r\n                      pattern='^\\+?1?\\d{8,15}$'\r\n                      values={values.phone_number_get_cargo}\r\n                      required\r\n                    />\r\n                    {\r\n                      'phone_number_get_cargo' in errors &&\r\n                      <Form.Control.Feedback type='invalid'>{errors.phone_number_get_cargo}</Form.Control.Feedback>\r\n                    }\r\n                  </Form.Group>\r\n                  <Form.Group controlId='cargo_weight'>\r\n                    <Form.Label>cargo weight as kilogram:</Form.Label>\r\n                    <Form.Control\r\n                      className={'cargo_weight' in errors ? 'is-invalid' : ''}\r\n                      name='cargo_weight'\r\n                      onChange={handleChange}\r\n                      maxLength={3}\r\n                      pattern='^\\d+(\\.\\d+)*$'\r\n                      values={values.cargo_weight}\r\n                      required\r\n                    />\r\n                    {\r\n                      'cargo_weight' in errors &&\r\n                      <Form.Control.Feedback type='invalid'>{errors.cargo_weight}</Form.Control.Feedback>\r\n                    }\r\n                  </Form.Group>\r\n                  <Form.Group controlId='group'>\r\n                    <Form.Label>commodity type</Form.Label>\r\n                    <Form.Control\r\n                      as='select'\r\n\r\n                      name='cargo_note'\r\n                      onChange={handleChange}\r\n                      value={values.cargo_note}\r\n                    >\r\n                      <option value='None'>....................</option>\r\n                      <option value='Fragile goods'>Fragile goods</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId='pickUpAddress'>\r\n                    <Form.Label>Pick up address:</Form.Label>\r\n                    <Form.Control\r\n                      data-cy='pick-up-address'\r\n                      name='pickUpAddress'\r\n                      onChange={handleChange}\r\n                      values={values.pickUpAddress}\r\n                      minLength={6}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n\r\n\r\n                  <Form.Group controlId='dropOffAddress'>\r\n                    <Form.Label>Drop off address:</Form.Label>\r\n                    <Form.Control\r\n                      data-cy='drop-off-address'\r\n                      name='dropOffAddress'\r\n                      onChange={handleChange}\r\n                      values={values.dropOffAddress}\r\n                      minLength={6}\r\n                      required\r\n\r\n                    />\r\n                  </Form.Group>\r\n                  <Card.Text></Card.Text>\r\n                  <Button className=\"Butt\" variant='warning' block onClick={() => showFormphone(setalo(values.dropOffAddress)) + setalo1(values.pickUpAddress) + { once: true }}>Check map</Button>\r\n                  <Card.Text></Card.Text>\r\n                  <Map\r\n                    lat={lat}\r\n                    lng={lng}\r\n                    zoom={13}\r\n                    pickUpAddress={alo1}\r\n                    dropOffAddress={alo}\r\n\r\n\r\n                  />\r\n\r\n                  <LoadScript\r\n                    googleMapsApiKey={mapne}  //{process.env.React_App_Map_API_KEY}\r\n                  >\r\n                    <GoogleMap>\r\n                      <DistanceMatrixService\r\n                        options={{\r\n                          destinations: [{ lat: la1, lng: lang1 }],\r\n                          origins: [{ lat: la, lng: lang }],\r\n                          travelMode: \"DRIVING\",\r\n                        }}\r\n                        callback={(response) => {\r\n                          try { const distance = response.rows[0].elements[0].distance.value; setDistanc(distance) } catch { }\r\n                        }}\r\n                      />\r\n                    </GoogleMap>\r\n\r\n\r\n                  </LoadScript>\r\n\r\n                  {setInpu(alo1),\r\n                    setInpu1(alo),\r\n                    setNote(values.cargo_note),\r\n                    setWeight(values.cargo_weight)}\r\n                  <Form.Group controlId='distance'>\r\n                    <Form.Label>Distance:</Form.Label>\r\n                    <Form.Control\r\n\r\n                      name='distance'\r\n\r\n                      value={Convert_distance}\r\n                      disabled\r\n\r\n\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId='price'>\r\n                    <Form.Label>Price:</Form.Label>\r\n                    <Form.Control\r\n\r\n                      name='Price'\r\n\r\n                      value={b}\r\n                      disabled\r\n\r\n                    />\r\n                  </Form.Group>\r\n                  <Card.Text></Card.Text>\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                    <Form.Check type=\"checkbox\" label=\"The transporter is entitled to co-inspect the goods before shipping under your supervisor!\" required />\r\n                  </Form.Group>\r\n                  <Card.Text></Card.Text>\r\n                  {showFormzphone && Convert_distance > 0 && (\r\n                    <Button className=\"Butt\" block type='submit' variant='info' disabled={isSubmitting}>Let's go</Button>\r\n                  )}\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default RiderRequest;","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\TripCard.js",[],["235","236"],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\services\\TripService.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\TripMedia.js",["237","238","239","240","241","242","243","244","245","246","247","248","249","250"],"import React,{useEffect,useState} from 'react';\r\nimport { Button, Media,Col,Card,Image } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport Map from './Map';\r\n\r\nimport '../UI/RiDiDe.css';\r\n\r\nfunction TripMedia ({ trip, group, otherGroup }) {\r\n  const user = trip[otherGroup];\r\n  const photoUrl = new URL(user.image, `${process.env.REACT_APP_API_KEY}/media/Img_media/${user.image}`).href;\r\n  const href = group ? `/${group}/${trip.id}` : undefined;\r\n  const [lat, setLat] = useState(10.781418);\r\n  const [lng, setLng] = useState(106.698321);\r\n  useEffect(() => {\r\n    if (window.navigator.geolocation) {\r\n      window.navigator.geolocation.getCurrentPosition((position) => {\r\n        setLat(position.coords.latitude);\r\n        setLng(position.coords.longitude);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container bootstrap snippets bootdey\">\r\n        <div className=\"panel-body inf-content\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n            <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex flex-column align-items-center text-center\">\r\n                <img src={user.image}  className='img-fluid'/>\r\n              </div>\r\n            </div>\r\n            </div>\r\n              <ul title=\"Ratings\" className=\"list-inline ratings text-center\">\r\n                <li><a href=\"#\"><span className=\"glyphicon glyphicon-star\" /></a></li>\r\n                <li><a href=\"#\"><span className=\"glyphicon glyphicon-star\" /></a></li>\r\n                <li><a href=\"#\"><span className=\"glyphicon glyphicon-star\" /></a></li>\r\n                <li><a href=\"#\"><span className=\"glyphicon glyphicon-star\" /></a></li>\r\n                <li><a href=\"#\"><span className=\"glyphicon glyphicon-star\" /></a></li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <strong>Information</strong><br />\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table table-user-information\">\r\n                  <tbody>\r\n                    <tr>    \r\n                      <td>\r\n                        <strong>\r\n                          <span className=\"glyphicon glyphicon-user  text-primary\" />\r\n                          <h5> Name of consignee:    </h5>    \r\n                                            \r\n                        </strong>\r\n                      </td>\r\n                      <td className=\"text-primary\">\r\n                        <h5>{trip.get_cargo_name} </h5>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>        \r\n                      <td>\r\n                        <strong>\r\n                          <span className=\"glyphicon glyphicon-bookmark text-primary\" /> \r\n                         <h6> Consignee Phone number: </h6>                                           \r\n                        </strong>\r\n                      </td>\r\n                      <td className=\"text-primary\">\r\n                      <h6>{trip.phone_number_get_cargo} </h6> \r\n                      </td>\r\n                    </tr>\r\n                    <tr>        \r\n                      <td>\r\n                        <strong>\r\n                          <span className=\"glyphicon glyphicon-eye-open text-primary\" /> \r\n                          Name of consignor:                                          \r\n                        </strong>\r\n                      </td>\r\n                      <td className=\"text-primary\">\r\n                      {user.first_name} {user.last_name}    \r\n                      </td>\r\n                    </tr>\r\n                    <tr>        \r\n                      <td>\r\n                        <strong>\r\n                          <span className=\"glyphicon glyphicon-envelope text-primary\" /> \r\n                          Consignor phone number:                                         \r\n                        </strong>\r\n                      </td>\r\n                      <td className=\"text-primary\">\r\n                      {user.phone_number}    \r\n                      </td>\r\n                    </tr>\r\n                    <tr>        \r\n                      <td>\r\n                        <strong>\r\n                          <span className=\"glyphicon glyphicon-calendar text-primary\" />\r\n                          Cargo weight:                                              \r\n                        </strong>\r\n                      </td>\r\n                      <td className=\"text-primary\">\r\n                      {trip.cargo_weight}  kilogram   \r\n                      </td>\r\n                    </tr>\r\n                    <tr>        \r\n                      <td>\r\n                        <strong>\r\n                          <span className=\"glyphicon glyphicon-calendar text-primary\" />\r\n                          Note:                                             \r\n                        </strong>\r\n                      </td>\r\n                      <td className=\"text-primary\">\r\n                      {trip.cargo_note} \r\n                      </td>\r\n                    </tr>\r\n                    <tr>    \r\n                      <td>\r\n                        <strong>\r\n                          <span className=\"glyphicon glyphicon-user  text-primary\" />\r\n                          <h4>Address: </h4>    \r\n                                            \r\n                        </strong>\r\n                      </td>\r\n                      <td className=\"text-primary\">\r\n                      <h5>From: {trip.pick_up_address} <br></br> To: {trip.drop_off_address}</h5>\r\n                      </td>\r\n                    </tr>\r\n\r\n\r\n                    <tr>        \r\n                        <td>\r\n                          <strong>\r\n                            <span className=\"glyphicon glyphicon-calendar text-primary\" />\r\n                            Distance                                              \r\n                          </strong>\r\n                        </td>\r\n                        <td className=\"text-primary\">\r\n                        {trip.cargo_distance}  Km\r\n                        </td>\r\n                      </tr>\r\n                      <tr>        \r\n                        <td>\r\n                          <strong>\r\n                            <span className=\"glyphicon glyphicon-calendar text-primary\" />\r\n                            Price                                            \r\n                          </strong>\r\n                        </td>\r\n                        <td className=\"text-primary\">\r\n                        <h4>{trip.cargo_price} VND</h4>\r\n                        </td>\r\n                      </tr>         \r\n                    \r\n                    <tr>        \r\n                      <td>\r\n                        <strong>\r\n                          <span className=\"glyphicon glyphicon-calendar text-primary\" />\r\n                          Status                                              \r\n                        </strong>\r\n                      </td>\r\n                      <td className=\"text-primary\">\r\n                      {trip.status} at: {trip.update_work}\r\n                      </td>\r\n                    </tr>                               \r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n      <Map\r\n                    lat={lat}\r\n                    lng={lng}\r\n                    zoom={13}\r\n                    pickUpAddress={trip.pick_up_address}\r\n                    dropOffAddress={trip.drop_off_address}\r\n                  />\r\n      </div>\r\n  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TripMedia;\r\n","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\Map.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\Changepass.js",[],["251","252"],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\DriverDashboard.js",["253"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Breadcrumb, Col, Row,Card\r\n} from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport TripCardDriver from './TripCardDriver';\r\nimport { connect, getTrips, messages } from '../services/TripService';\r\n\r\nimport '../UI/Bt.css';\r\n\r\nfunction DriverDashboard (props) {\r\n  const [trips, setTrips] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const loadTrips = async () => {\r\n      const { response, isError } = await getTrips();\r\n      if (isError) {\r\n        setTrips([]);\r\n      } else {\r\n        setTrips(response.data);\r\n      }\r\n    }\r\n    loadTrips();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    connect();\r\n    const subscription = messages.subscribe((message) => {\r\n      setTrips(prevTrips => [\r\n        ...prevTrips.filter(trip => trip.id !== message.data.id),\r\n        message.data\r\n      ]);\r\n      updateToast(message.data);\r\n    });\r\n    return () => {\r\n      if (subscription) {\r\n        subscription.unsubscribe();\r\n      }\r\n    }\r\n  }, [setTrips]);\r\n\r\n  const getCurrentTrips = () => {\r\n    return trips.filter(trip => {\r\n      return trip.driver !== null && trip.status !== 'COMPLETED';\r\n    });\r\n  };\r\n\r\n  const getRequestedTrips = () => {\r\n    return trips.filter(trip => {\r\n      return trip.status === 'REQUESTED';\r\n    });\r\n  };\r\n\r\n  const updateToast = (trip) => {\r\n    if (trip.driver === null) {\r\n      toast.info(`Rider ${trip.rider.first_name} has requested a call.`);\r\n    }\r\n    else if (trip.status === 'CANCELD') {\r\n      toast.error(`Rider ${trip.rider.first_name} has CANCELD.`);\r\n    }\r\n    \r\n  };\r\n  \r\n  return (\r\n    <Row>\r\n      <Col lg={12}>\r\n      \r\n        <Breadcrumb>\r\n          \r\n          <Breadcrumb.Item active>Dashboard</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        \r\n\r\n        <TripCardDriver\r\n          title='Current delivery Trip'\r\n          trips={getCurrentTrips()}\r\n          group='driver'\r\n          otherGroup='rider'\r\n        />\r\n\r\n        <TripCardDriver\r\n          title='Requested Trips'\r\n          trips={getRequestedTrips()}\r\n          group='driver'\r\n          otherGroup='rider'\r\n        />\r\n\r\n\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default DriverDashboard;\r\n","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\ResetPassword.js",["254"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Breadcrumb, Button, Card, Col, Form, Row\r\n} from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport '../UI/Bt.css';\r\n\r\n\r\nfunction ResetPassword (props)  {\r\n    const [isSubmitted, setSubmitted] = useState(false);\r\n\r\n  const onSubmit = async (values, actions) => {\r\n    const url = `${process.env.REACT_APP_API_KEY}/api/password_reset/`;\r\n    const formData = new FormData();\r\n    formData.append('email', values.email);\r\n    \r\n    try {\r\n      await axios.post(url, formData);\r\n      setSubmitted(true);\r\n    }\r\n    catch (response) {\r\n      const data = response.response.data;\r\n      for (const value in data) {\r\n        actions.setFieldError(value, data[value].join(' '));\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isSubmitted) {\r\n    return <Redirect to='/ResetPasswordConfirm' />\r\n  }\r\n\r\n    return (\r\n        <Row>\r\n          <Col lg={12}>\r\n           \r\n            <Card className='taget'  bg='light' border='secondary'>\r\n              <Card.Header>Reset your password</Card.Header>\r\n              <Card.Body>\r\n                <Formik\r\n                  initialValues={{\r\n                    email: '',\r\n                    \r\n                  }}\r\n                  onSubmit={onSubmit}\r\n                >\r\n                  {({\r\n                    errors,\r\n                    handleChange,\r\n                    handleSubmit,\r\n                    isSubmitting,\r\n                    setFieldValue,\r\n                    values\r\n                  }) => (\r\n                    <Form validated onSubmit={handleSubmit}>\r\n                      \r\n                      <Form.Group controlId='email'>\r\n                        <Form.Label>Email:</Form.Label>\r\n                        <Form.Control\r\n                          className={ 'email' in errors ? 'is-invalid' : '' }\r\n                          name='email'\r\n                          onChange={handleChange}\r\n                          required\r\n                          values={values.email = values.email.toLowerCase()}\r\n                          \r\n                        />\r\n                        {\r\n                          'email' in errors &&\r\n                          <Form.Control.Feedback type='invalid'>{ errors.email }</Form.Control.Feedback>\r\n                        }\r\n                      </Form.Group>\r\n                      <Card.Text></Card.Text>\r\n                      <Button  className=\"Butt\" block type='submit' variant='primary'> Send key reset password to your email </Button>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </Card.Body>\r\n              <p className='mt-3 text-center'>\r\n                Already have an account? <Link to='/log-in'>Log in!</Link>\r\n              </p>\r\n              <p className='mt-3 text-center'>\r\n                Create an account? <Link to='/sign-up'>Sign Up!</Link>\r\n              </p>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      );\r\n};\r\n\r\nexport default ResetPassword;","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\ResetPasswordConfirm.js",["255"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Breadcrumb, Button, Card, Col, Form, Row\r\n} from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport '../UI/Bt.css';\r\n\r\nfunction ResetPasswordConfirm (props)  {\r\n    const [isSubmitted, setSubmitted] = useState(false);\r\n\r\n    const [err,setErr] = useState('');\r\n\r\n  const onSubmit = async (values, actions) => {\r\n    const url = `${process.env.REACT_APP_API_KEY}/api/password_reset/confirm/`;\r\n    const formData = new FormData();\r\n    formData.append('password', values.password);\r\n    formData.append('token', values.token);\r\n    \r\n    try {\r\n      await axios.post(url, formData);\r\n      setSubmitted(true);\r\n    }\r\n    catch (response) {\r\n      if(response.response.data.detail==='Not found.'){\r\n        setErr('Invalid key please check again')\r\n      }\r\n      const data = response.response.data;\r\n      for (const value in data) {\r\n        actions.setFieldError(value, data[value].join(' '));\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isSubmitted) {\r\n    return <Redirect to='/log-in' />\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col lg={12}>\r\n       \r\n        <Card className='taget' bg='light' border='secondary' >\r\n          <Card.Header>Create your new password</Card.Header>\r\n          <Card.Body>\r\n            <Formik\r\n            \r\n              initialValues={{\r\n                \r\n                password: '',\r\n                token: '',\r\n                \r\n              }}\r\n              onSubmit={onSubmit}\r\n            >\r\n              {({\r\n                errors,\r\n                handleChange,\r\n                handleSubmit,\r\n                isSubmitting,\r\n                setFieldValue,\r\n                values\r\n              }) => (\r\n                <Form  validated onSubmit={handleSubmit}>\r\n                  <Card.Text>Please check your email to get key to reset password</Card.Text>\r\n                    <Form.Group controlId='token'>\r\n                    <Form.Label>key to reset password:</Form.Label>\r\n                    <Form.Control\r\n                      className={ 'token' in errors ? 'is-invalid' : '' }\r\n                      name='token'\r\n                      onChange={handleChange}\r\n                      type='text'\r\n                      value={values.token}\r\n                      required\r\n                      \r\n                    />\r\n                    {\r\n                      'token' in errors &&\r\n                      <Form.Control.Feedback type='invalid'>{ errors.token }</Form.Control.Feedback>\r\n                    }\r\n                  </Form.Group>\r\n                  <Card.Text><p className=\"err\">{err}</p></Card.Text>\r\n                  <Card.Text><li>Password must contains one digit from 0-9</li>\r\n                  <li>Must contains at least one lowercase and one upper characters</li>\r\n                  <li>length at least 10 characters</li></Card.Text>\r\n                  \r\n                  <Form.Group controlId='password'>\r\n                    <Form.Label>New password:</Form.Label>\r\n                    <Form.Control\r\n                      className={ 'password' in errors ? 'is-invalid' : '' }\r\n                      name='password'\r\n                      onChange={handleChange}\r\n                      type='password'\r\n                      value={values.password}\r\n                      pattern='^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$'\r\n                      minLength={10}\r\n                      \r\n                      required\r\n                      \r\n                    />\r\n                    {\r\n                      'password' in errors &&\r\n                      <Form.Control.Feedback type='invalid'>{ errors.password }</Form.Control.Feedback>\r\n                    }\r\n                  </Form.Group>\r\n                  <Card.Text></Card.Text>\r\n                  <Button className=\"Butt\"  block type='submit' variant='primary'>Send</Button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Card.Body>\r\n          <p className='mt-3 text-center'>\r\n            Already have an account? <Link to='/log-in'>Log in!</Link>\r\n          </p>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordConfirm;","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\Driverhistory.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\Riderhistory.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\TripMediaRider.js",["256","257","258","259","260","261","262","263","264","265","266"],"import React from 'react';\r\nimport { Button,Image} from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport '../UI/RiDiDe.css';\r\n\r\nfunction TripMedia({ trip, group, otherGroup }) {\r\n  const user = trip[otherGroup];\r\n  const photoUrl = new URL(user.image, `${process.env.REACT_APP_API_KEY}/media/Img_media/${user.image}`).href;\r\n  const href = group ? `/${group}/${trip.id}` : undefined;\r\n\r\n  return (\r\n      <div>\r\n        <div className=\"container bootstrap snippets bootdey\">\r\n          <div className=\"panel-body inf-content\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n              <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex flex-column align-items-center text-center\">\r\n              <img src={user.image}   className='img-fluid'/>\r\n              </div>\r\n            </div>\r\n            </div>\r\n                <ul title=\"Ratings\" className=\"list-inline ratings text-center\">\r\n                  <li><a href=\"#\"><span className=\"glyphicon glyphicon-star\" /></a></li>\r\n                  <li><a href=\"#\"><span className=\"glyphicon glyphicon-star\" /></a></li>\r\n                  <li><a href=\"#\"><span className=\"glyphicon glyphicon-star\" /></a></li>\r\n                  <li><a href=\"#\"><span className=\"glyphicon glyphicon-star\" /></a></li>\r\n                  <li><a href=\"#\"><span className=\"glyphicon glyphicon-star\" /></a></li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <strong>Information</strong><br />\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table table-user-information\">\r\n                    <tbody>\r\n                      <tr>    \r\n                        <td>\r\n                          <strong>\r\n                            <span className=\"glyphicon glyphicon-user  text-primary\" />\r\n                            <h5> Name of Driver:    </h5>    \r\n                                              \r\n                          </strong>\r\n                        </td>\r\n                        <td className=\"text-primary\">\r\n                          <h5> {user.first_name} {user.last_name}  </h5>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>        \r\n                        <td>\r\n                          <strong>\r\n                            <span className=\"glyphicon glyphicon-bookmark text-primary\" /> \r\n                           <h6> Driver Phone number: </h6>                                           \r\n                          </strong>\r\n                        </td>\r\n                        <td className=\"text-primary\">\r\n                        <h6> {user.phone_number} </h6> \r\n                        </td>\r\n                      </tr>\r\n                      <tr>        \r\n                        <td>\r\n                          <strong>\r\n                            <span className=\"glyphicon glyphicon-eye-open text-primary\" /> \r\n                            Name of Consignee:                                          \r\n                          </strong>\r\n                        </td>\r\n                        <td className=\"text-primary\">\r\n                        {trip.get_cargo_name}  \r\n                        </td>\r\n                      </tr>\r\n                      <tr>        \r\n                        <td>\r\n                          <strong>\r\n                            <span className=\"glyphicon glyphicon-envelope text-primary\" /> \r\n                            Consignee phone number:                                         \r\n                          </strong>\r\n                        </td>\r\n                        <td className=\"text-primary\">\r\n                        {trip.phone_number_get_cargo}    \r\n                        </td>\r\n                      </tr>\r\n                      <tr>        \r\n                        <td>\r\n                          <strong>\r\n                            <span className=\"glyphicon glyphicon-calendar text-primary\" />\r\n                            Cargo weight:                                              \r\n                          </strong>\r\n                        </td>\r\n                        <td className=\"text-primary\">\r\n                        {trip.cargo_weight}  kilogram   \r\n                        </td>\r\n                      </tr>\r\n                      <tr>        \r\n                        <td>\r\n                          <strong>\r\n                            <span className=\"glyphicon glyphicon-calendar text-primary\" />\r\n                            Note:                                             \r\n                          </strong>\r\n                        </td>\r\n                        <td className=\"text-primary\">\r\n                        {trip.cargo_note} \r\n                        </td>\r\n                      </tr>\r\n                      <tr>    \r\n                        <td>\r\n                          <strong>\r\n                            <span className=\"glyphicon glyphicon-user  text-primary\" />\r\n                            <h4>Address: </h4>    \r\n                                              \r\n                          </strong>\r\n                        </td>\r\n                        <td className=\"text-primary\">\r\n                        <h5>From: {trip.pick_up_address} <br></br> To: {trip.drop_off_address}</h5>\r\n                        </td>\r\n                      </tr>\r\n\r\n                      <tr>        \r\n                        <td>\r\n                          <strong>\r\n                            <span className=\"glyphicon glyphicon-calendar text-primary\" />\r\n                            Distance                                              \r\n                          </strong>\r\n                        </td>\r\n                        <td className=\"text-primary\">\r\n                        {trip.cargo_distance}  Km\r\n                        </td>\r\n                      </tr>\r\n                      <tr>        \r\n                        <td>\r\n                          <strong>\r\n                            <span className=\"glyphicon glyphicon-calendar text-primary\" />\r\n                            Price                                            \r\n                          </strong>\r\n                        </td>\r\n                        <td className=\"text-primary\">\r\n                        <h4>{trip.cargo_price} VND</h4>\r\n                        </td>\r\n                      </tr>          \r\n\r\n                      \r\n                            \r\n                      <tr>        \r\n                        <td>\r\n                          <strong>\r\n                            <span className=\"glyphicon glyphicon-calendar text-primary\" />\r\n                            Status                                              \r\n                          </strong>\r\n                        </td>\r\n                        <td className=\"text-primary\">\r\n                        {trip.status} at: {trip.update_work}\r\n                        </td>\r\n                      </tr>                               \r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n                  \r\n    \r\n      </div>\r\n    );\r\n}\r\n\r\nexport default TripMedia;\r\n","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\TripCardRider.js",[],["267","268"],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\TripCardDriver.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\TripMediaDriver.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\TripCardRiderhistory.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\TripMediaRiderHistory.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\Profile.js",["269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287"],"import React, { useEffect, useState } from 'react';\r\nimport { Card,Breadcrumb,Form,Button,Alert } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport { Image } from 'react-bootstrap';\r\nimport { getAccessToken,getUser } from '../services/AuthService';\r\nimport axios from \"axios\";\r\nimport './Login.css';\r\n\r\nimport { Formik } from 'formik';\r\nimport {toast} from 'react-toastify';\r\n\r\nimport '../UI/Bt.css';\r\n\r\nfunction Profile(props) {\r\n  const [showFormz, setShowForm] = useState(false);\r\n\r\n  const showForm = () => {\r\n    setShowForm(!showFormz);\r\n  }\r\n  const [showFormzemail, setShowFormemail] = useState(false);\r\n\r\n  const showFormemail = () => {\r\n    setShowFormemail(!showFormzemail);\r\n  }\r\n\r\n  const [showFormzphone, setShowFormphone] = useState(false);\r\n\r\n  const showFormphone = () => {\r\n    setShowFormphone(!showFormzphone);\r\n  }\r\n\r\n  const [showFormzimage, setShowFormimage] = useState(false);\r\n\r\n  const showFormimage = () => {\r\n    setShowFormimage(!showFormzimage);\r\n  }\r\n\r\n  const isauto = () => {\r\n  const user = getUser();\r\n    return user.id;\r\n  };\r\n\r\n  const [isSubmitted, setSubmitted] = useState(false);\r\n  const [old_password, setTitle] = useState('');\r\n  const [new_password, setBody] = useState('');\r\n  const [email, setemail] = useState('');\r\n  const [phone_number, setphone] = useState('');\r\n\r\n\r\n  const [post, setPost] = React.useState(null);\r\n  const token = getAccessToken();\r\n  const eaders1 = { 'Content-Type': 'application/json' ,Authorization: `Bearer ${token}` };\r\n\r\n  React.useEffect(() => {\r\n    axios.get(`${process.env.REACT_APP_API_KEY}/api/Send_cargo/change/${isauto()}`,({headers:eaders1})).then((response) => {\r\n      setPost(response.data);\r\n    });\r\n  }, []);\r\n\r\n  if (!post) return null;\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const pass = { old_password, new_password };\r\n\r\n    fetch(`${process.env.REACT_APP_API_KEY}/api/Send_cargo/change-password/`, {\r\n      method: 'PUT',\r\n      headers:  eaders1 ,\r\n      body: JSON.stringify(pass)\r\n      \r\n      \r\n    })\r\n}\r\nconst onSubmit = async (values, actions) => {\r\n  const url = `${process.env.REACT_APP_API_KEY}/api/Send_cargo/change-image/${isauto()}`;\r\n  const formData = new FormData();\r\n  formData.append('image', values.image);\r\n  \r\n  try {\r\n    await axios.put(url, formData,{headers:eaders1});\r\n    setSubmitted(true);\r\n    \r\n  }\r\n  catch (response) {\r\n    const data = response.response.data;\r\n    for (const value in data) {\r\n      actions.setFieldError(value, data[value].join(' '));\r\n    }\r\n  }\r\n};\r\nconst handleSubmit_e = async (values, actions) => {\r\n  const url = `${process.env.REACT_APP_API_KEY}/api/Send_cargo/change-email/${isauto()}`;\r\n  const formData = new FormData();\r\n  formData.append('email', values.email);\r\n  \r\n  try {\r\n    await axios.put(url, formData,{headers:eaders1});\r\n    setSubmitted(true);\r\n    \r\n  }\r\n  catch (response) {\r\n    const data = response.response.data;\r\n    for (const value in data) {\r\n      actions.setFieldError(value, data[value].join(' '));\r\n    }\r\n  }\r\n};\r\nconst handleSubmit_phone = async (values, actions) => {\r\n  const url = `${process.env.REACT_APP_API_KEY}/api/Send_cargo/change-phone/${isauto()}`;\r\n  const formData = new FormData();\r\n  formData.append('phone_number', values.phone_number);\r\n  \r\n  try {\r\n    await axios.put(url, formData,{headers:eaders1});\r\n    setSubmitted(true);\r\n    \r\n  }\r\n  catch (response) {\r\n    const data = response.response.data;\r\n    for (const value in data) {\r\n      actions.setFieldError(value, data[value].join(' '));\r\n    }\r\n  }\r\n};\r\nconst handleSubmit_password = async (values, actions) => {\r\n  const url = `${process.env.REACT_APP_API_KEY}/api/Send_cargo/change-password/`;\r\n  const formData = new FormData();\r\n  formData.append('old_password', values.old_password);\r\n  formData.append('new_password', values.new_password);\r\n  \r\n  try {\r\n    await axios.put(url, formData,{headers:eaders1});\r\n    setSubmitted(true);\r\n    \r\n  }\r\n  catch (response) {\r\n    const data = response.response.data;\r\n    for (const value in data) {\r\n      actions.setFieldError(value, data[value].join(' '));\r\n    }\r\n  }\r\n};\r\n\r\n\r\n\r\nfunction reloadPage() {\r\n    window.location.reload();\r\n\r\n}\r\nif (isSubmitted) {\r\n  reloadPage()\r\n}\r\n \r\n\r\n  return (\r\n    <div className=\"container bootstrap snippets bootdey\">\r\n      <Card className='mb-3' bg='light' border='secondary'>\r\n        <Card.Header>\r\n      <Breadcrumb>\r\n          <Breadcrumb.Item href='/'>Home</Breadcrumb.Item>\r\n          <Breadcrumb.Item active>My profile</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        </Card.Header>\r\n        </Card>\r\n        <div className=\"panel-body inf-content\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n            <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex flex-column align-items-center text-center\">\r\n                <img src={post.image}  className=\"img-fluid\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n              <ul title=\"Ratings\" className=\"list-inline ratings text-center\">\r\n                <li><a href=\"#\"><span className=\"glyphicon glyphicon-star\" /></a></li>\r\n                <li><a href=\"#\"><span className=\"glyphicon glyphicon-star\" /></a></li>\r\n                <li><a href=\"#\"><span className=\"glyphicon glyphicon-star\" /></a></li>\r\n                <li><a href=\"#\"><span className=\"glyphicon glyphicon-star\" /></a></li>\r\n                <li><a href=\"#\"><span className=\"glyphicon glyphicon-star\" /></a></li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <strong>Profile Information</strong><br />\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table table-user-information\">\r\n                  <tbody>\r\n                    <tr>    \r\n                      <td>\r\n                        <strong>\r\n                          <span className=\"glyphicon glyphicon-user  text-primary\" />    \r\n                         Your Name                                                \r\n                        </strong>\r\n                      </td>\r\n                      <td className=\"text-primary\">\r\n                        {post.first_name} {post.last_name}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>        \r\n                      <td>\r\n                        <strong>\r\n                          <span className=\"glyphicon glyphicon-eye-open text-primary\" /> \r\n                          Role                                                \r\n                        </strong>\r\n                      </td>\r\n                      <td className=\"text-primary\">\r\n                        {post.group}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>        \r\n                      <td>\r\n                        <strong>\r\n                          <span className=\"glyphicon glyphicon-envelope text-primary\" /> \r\n                          Email                                                \r\n                        </strong>\r\n                      </td>\r\n                      <td className=\"text-primary\">\r\n                        {post.email} <br></br> <Button onClick={showFormemail}>Change Email</Button>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>        \r\n                      <td>\r\n                        <strong>\r\n                          <span className=\"glyphicon glyphicon-calendar text-primary\" />\r\n                          phone_number                                              \r\n                        </strong>\r\n                      </td>\r\n                      <td className=\"text-primary\">\r\n                        {post.phone_number} <br></br><Button onClick={showFormphone}>Change Phone number</Button>  \r\n                      </td>\r\n                    </tr>\r\n                    <tr>        \r\n                      <td>\r\n                        <strong>\r\n                          <span className=\"glyphicon glyphicon-calendar text-primary\" />\r\n                          Password                                                \r\n                        </strong>\r\n                      </td>\r\n                      <td className=\"text-primary\">\r\n                      <Button  onClick={showForm}>Change password</Button>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>        \r\n                      <td>\r\n                        <strong>\r\n                          <span className=\"glyphicon glyphicon-calendar text-primary\" />\r\n                          Avatar Image                                                \r\n                        </strong>\r\n                      </td>\r\n                      <td className=\"text-primary\">\r\n                      <Button onClick={showFormimage}>Change Avatar</Button>\r\n                      </td>\r\n                    </tr>                                     \r\n                  </tbody>\r\n                </table>\r\n                \r\n                {showFormzemail && (\r\n      <div>\r\n         <Card className='mb-3' bg='light' border='secondary'>\r\n        <Card.Header>\r\n      <Breadcrumb>\r\n          \r\n          <Breadcrumb.Item active>Change email</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        </Card.Header>\r\n        <Card.Body>\r\n        <Formik\r\n              initialValues={{\r\n                email: '',\r\n                \r\n              }}\r\n              onSubmit={handleSubmit_e}\r\n            >\r\n              {({\r\n                errors,\r\n                handleChange,\r\n                handleSubmit,\r\n                isSubmitting,\r\n                setFieldValue,\r\n                values\r\n              }) => (\r\n                <Form validated onSubmit={handleSubmit}>\r\n                  <Form.Group controlId='email'>\r\n                    <Form.Label>Email:</Form.Label>\r\n                    <Form.Control\r\n                      className={ 'email' in errors ? 'is-invalid' : '' }\r\n                      name='email'\r\n                      onChange={handleChange}\r\n                      required \r\n                      values={values.email = values.email.toLowerCase()}\r\n                      \r\n                    />\r\n                    {\r\n                      'email' in errors &&\r\n                      <Form.Control.Feedback type='invalid'>{ errors.email }</Form.Control.Feedback>\r\n                    }\r\n                  </Form.Group>\r\n                  \r\n                  <Card.Text></Card.Text>\r\n                  <Button block className ='Butt' type='submit' variant='success' >Save Change</Button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n</Card.Body>\r\n</Card>\r\n      </div>\r\n    )}\r\n    {showFormzphone && (\r\n      <div>\r\n         <Card className='mb-3' bg='light' border='secondary'>\r\n        <Card.Header>\r\n      <Breadcrumb>\r\n          \r\n          <Breadcrumb.Item active>Change Phone_number</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        </Card.Header>\r\n        <Card.Body>\r\n        <Formik\r\n              initialValues={{\r\n                phone_number: '',\r\n                \r\n              }}\r\n              onSubmit={handleSubmit_phone}\r\n            >\r\n              {({\r\n                errors,\r\n                handleChange,\r\n                handleSubmit,\r\n                isSubmitting,\r\n                setFieldValue,\r\n                values\r\n              }) => (\r\n                <Form validated onSubmit={handleSubmit}>\r\n                  <Form.Group controlId='phone_number'>\r\n                    <Form.Label>Phone Number:</Form.Label>\r\n                    <Form.Control\r\n                      className={ 'phone_number' in errors ? 'is-invalid' : '' }\r\n                      name='phone_number'\r\n                      onChange={handleChange}\r\n                      required \r\n                      values={values.phone_number}\r\n                      \r\n                    />\r\n                    {\r\n                      'phone_number' in errors &&\r\n                      <Form.Control.Feedback type='invalid'>{ errors.phone_number }</Form.Control.Feedback>\r\n                    }\r\n                  </Form.Group>\r\n                  \r\n                  <Card.Text></Card.Text>\r\n                  <Button block  className ='Butt' type='submit' variant='success' >Save Change</Button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n</Card.Body>\r\n</Card>\r\n      </div>\r\n    )}\r\n                \r\n                {showFormz && (\r\n       <div>\r\n         <Card className='mb-3' bg='light' border='secondary'>\r\n        <Card.Header>\r\n      <Breadcrumb>\r\n          <Breadcrumb.Item active>Change password</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        </Card.Header>\r\n        <Card.Body>\r\n        <Formik\r\n              initialValues={{\r\n                \r\n                old_password: '',\r\n                new_password: '',\r\n                \r\n              }}\r\n              onSubmit={handleSubmit_password}\r\n            >\r\n              {({\r\n                errors,\r\n                handleChange,\r\n                handleSubmit,\r\n                isSubmitting,\r\n                setFieldValue,\r\n                values\r\n              }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                  \r\n                  <Form.Group controlId='old_password'>\r\n                    <Form.Label>Old Password:</Form.Label>\r\n                    <Form.Control\r\n                      className={ 'old_password' in errors ? 'is-invalid' : '' }\r\n                      name='old_password'\r\n                      onChange={handleChange}\r\n                      type='password'\r\n                      value={values.old_password}\r\n                      required\r\n                    />\r\n                    {\r\n                      'old_password' in errors &&\r\n                      <Form.Control.Feedback type='invalid'>{ errors.old_password }</Form.Control.Feedback>\r\n                    }\r\n                  </Form.Group>\r\n                  <Form.Group controlId='new_password'>\r\n                    <Form.Label>New Password:</Form.Label>\r\n                    <Form.Control\r\n                      className={ 'new_password' in errors ? 'is-invalid' : '' }\r\n                      name='new_password'\r\n                      onChange={handleChange}\r\n                      type='password'\r\n                      value={values.new_password}\r\n                      required\r\n                    />\r\n                    {\r\n                      'new_password' in errors &&\r\n                      <Form.Control.Feedback type='invalid'>{ errors.new_password }</Form.Control.Feedback>\r\n                    }\r\n                  </Form.Group>\r\n              \r\n                  <Card.Text></Card.Text>\r\n                  <Button block className ='Butt' type='submit' variant='success' >Save Change</Button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n</Card.Body>\r\n</Card>\r\n       </div>\r\n       \r\n    )}\r\n    {showFormzimage && (\r\n     \r\n      \r\n        <Card className='mb-2' bg = 'light' border=\"secondary\">\r\n          <Card.Header>Change Avatar</Card.Header>\r\n          <Card.Body>\r\n            <Formik\r\n              initialValues={{\r\n\r\n                image: []\r\n              }}\r\n              onSubmit={onSubmit}\r\n            >\r\n              {({\r\n                errors,\r\n                handleChange,\r\n                handleSubmit,\r\n                isSubmitting,\r\n                setFieldValue,\r\n                values\r\n              }) => (\r\n                <Form validated onSubmit={handleSubmit}>\r\n                  <Card.Text></Card.Text>\r\n                  <Form.Group controlId='image'>\r\n                    <Form.Label>Avatar : </Form.Label>\r\n                    <Form.Control\r\n                      className={ 'image' in errors ? 'is-invalid' : '' }\r\n                      name='image'\r\n                      onChange={event => {\r\n                        setFieldValue('image', event.currentTarget.files[0]);\r\n                      }}\r\n                      type='file'\r\n                      required\r\n                    />\r\n                    {\r\n                      'image' in errors &&\r\n                      <Form.Control.Feedback type='invalid'>{ errors.image }</Form.Control.Feedback>\r\n                    }\r\n                  </Form.Group>\r\n                  <Card.Text></Card.Text>\r\n                  <Button block className ='Butt' type='submit' variant='success'>Save Change</Button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Card.Body>\r\n        </Card>\r\n    )}\r\n      \r\n \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\UI\\Footer.js",["288"],"import React from \"react\";\r\n\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    \r\n          \r\n    <div className=\"main-footer\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {/* Column1 */}\r\n          <div className=\"col\">\r\n            <h4>Let's go</h4>\r\n            <h1 className=\"list-unstyled\">\r\n              <li>1009699669</li>\r\n            </h1>\r\n          </div>\r\n          {/* Column2 */}\r\n          <div className=\"col\">\r\n            <h4></h4>\r\n            <ui className=\"list-unstyled\">\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n            </ui>\r\n          </div>\r\n          <div className=\"col\">\r\n            <h4>Simple carry your cargo</h4>\r\n            <ui className=\"list-unstyled\">\r\n              <li>Fast</li>\r\n              <li>Professional</li>\r\n              <li>Secure</li>\r\n              <li></li>\r\n              <li></li>\r\n            </ui>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    \r\n  );\r\n}\r\n\r\nexport default Footer;","C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\ProfileDriver.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\TripCardDriverHis.js",[],"C:\\Users\\nhatv\\OneDrive\\Máy tính\\tour1\\media\\project_cargo_ui\\src\\components\\TripMediaDriverHis.js",["289","290","291"],"import React from 'react';\r\nimport { Button} from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport '../UI/Driver.css';\r\nimport '../UI/Bt.css';\r\n\r\n\r\n\r\nfunction TripMediaDriverHis({ trip, group, otherGroup }) {\r\n  const user = trip[otherGroup];\r\n  const photoUrl = new URL(user.image, `${process.env.REACT_APP_API_KEY}/media/Img_media/${user.image}`).href;\r\n  const href = group ? `/${group}/${trip.id}` : undefined;\r\n  \r\n\r\n  return (\r\n    <div>\r\n        <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" />\r\n        <div className=\"container profile-page\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm\">\r\n              <div className=\"card profile-header\">\r\n                <div className=\"body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-4 col-md-4 col-12\">\r\n                      <div className=\"profile-image float-md-right\"> <img src={photoUrl} className='img-fluid' alt=\"\" /> </div>\r\n                    </div>\r\n                    <div className=\"col-lg-8 col-md-8 col-12\">\r\n                      <h6 className=\"m-t-0 m-b-0\">From {trip.pick_up_address} to {trip.drop_off_address}</h6>\r\n                      <span className=\"job_post\"><strong>Name of consignor:</strong> {user.first_name} {user.last_name}</span>\r\n                      <br />\r\n                      <p> <strong>consignor phone number:  </strong>{user.phone_number}</p>\r\n                      <p> <strong>Distance:  </strong>{trip.cargo_distance} km</p>\r\n                      <h4> <p><strong>Price:  </strong>{trip.cargo_price} VND</p></h4>\r\n                      \r\n                      <p> <strong>Status: {trip.status}</strong></p>\r\n                      <p> <strong>Date: {trip.update_work}</strong></p>\r\n                      <div>\r\n                      </div>\r\n                    </div>                \r\n                  </div>\r\n                </div>                    \r\n              </div>\r\n            </div>\r\n            </div>\r\n           \r\n          \r\n        </div>\r\n      \r\n    \r\n\r\n  </div>\r\n\r\n   \r\n\r\n  );\r\n}\r\n\r\nexport default TripMediaDriverHis;\r\n",{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"292","replacedBy":"296"},{"ruleId":"294","replacedBy":"297"},{"ruleId":"298","severity":1,"message":"299","line":17,"column":8,"nodeType":"300","messageId":"301","endLine":17,"endColumn":15},{"ruleId":"302","severity":1,"message":"303","line":30,"column":51,"nodeType":"304","messageId":"305","endLine":30,"endColumn":53},{"ruleId":"302","severity":1,"message":"303","line":19,"column":42,"nodeType":"304","messageId":"305","endLine":19,"endColumn":44},{"ruleId":"302","severity":1,"message":"303","line":23,"column":45,"nodeType":"304","messageId":"305","endLine":23,"endColumn":47},{"ruleId":"306","severity":1,"message":"307","line":94,"column":32,"nodeType":"308","endLine":94,"endColumn":51},{"ruleId":"309","severity":1,"message":"310","line":57,"column":5,"nodeType":"311","messageId":"312","endLine":60,"endColumn":6},{"ruleId":"298","severity":1,"message":"313","line":12,"column":10,"nodeType":"300","messageId":"301","endLine":12,"endColumn":15},{"ruleId":"298","severity":1,"message":"314","line":14,"column":27,"nodeType":"300","messageId":"301","endLine":14,"endColumn":38},{"ruleId":"298","severity":1,"message":"315","line":14,"column":40,"nodeType":"300","messageId":"301","endLine":14,"endColumn":58},{"ruleId":"316","severity":1,"message":"317","line":283,"column":33,"nodeType":"318","messageId":"319","endLine":283,"endColumn":34},{"ruleId":"292","replacedBy":"320"},{"ruleId":"294","replacedBy":"321"},{"ruleId":"298","severity":1,"message":"322","line":2,"column":10,"nodeType":"300","messageId":"301","endLine":2,"endColumn":16},{"ruleId":"298","severity":1,"message":"323","line":2,"column":18,"nodeType":"300","messageId":"301","endLine":2,"endColumn":23},{"ruleId":"298","severity":1,"message":"324","line":2,"column":24,"nodeType":"300","messageId":"301","endLine":2,"endColumn":27},{"ruleId":"298","severity":1,"message":"325","line":2,"column":28,"nodeType":"300","messageId":"301","endLine":2,"endColumn":32},{"ruleId":"298","severity":1,"message":"326","line":2,"column":33,"nodeType":"300","messageId":"301","endLine":2,"endColumn":38},{"ruleId":"298","severity":1,"message":"327","line":3,"column":10,"nodeType":"300","messageId":"301","endLine":3,"endColumn":23},{"ruleId":"298","severity":1,"message":"328","line":10,"column":9,"nodeType":"300","messageId":"301","endLine":10,"endColumn":17},{"ruleId":"298","severity":1,"message":"329","line":11,"column":9,"nodeType":"300","messageId":"301","endLine":11,"endColumn":13},{"ruleId":"330","severity":1,"message":"331","line":34,"column":17,"nodeType":"308","endLine":34,"endColumn":63},{"ruleId":"306","severity":1,"message":"332","line":39,"column":21,"nodeType":"308","endLine":39,"endColumn":33},{"ruleId":"306","severity":1,"message":"332","line":40,"column":21,"nodeType":"308","endLine":40,"endColumn":33},{"ruleId":"306","severity":1,"message":"332","line":41,"column":21,"nodeType":"308","endLine":41,"endColumn":33},{"ruleId":"306","severity":1,"message":"332","line":42,"column":21,"nodeType":"308","endLine":42,"endColumn":33},{"ruleId":"306","severity":1,"message":"332","line":43,"column":21,"nodeType":"308","endLine":43,"endColumn":33},{"ruleId":"292","replacedBy":"333"},{"ruleId":"294","replacedBy":"334"},{"ruleId":"298","severity":1,"message":"325","line":3,"column":24,"nodeType":"300","messageId":"301","endLine":3,"endColumn":28},{"ruleId":"298","severity":1,"message":"335","line":5,"column":3,"nodeType":"300","messageId":"301","endLine":5,"endColumn":13},{"ruleId":"298","severity":1,"message":"335","line":5,"column":3,"nodeType":"300","messageId":"301","endLine":5,"endColumn":13},{"ruleId":"298","severity":1,"message":"322","line":2,"column":10,"nodeType":"300","messageId":"301","endLine":2,"endColumn":16},{"ruleId":"298","severity":1,"message":"326","line":2,"column":17,"nodeType":"300","messageId":"301","endLine":2,"endColumn":22},{"ruleId":"298","severity":1,"message":"327","line":3,"column":10,"nodeType":"300","messageId":"301","endLine":3,"endColumn":23},{"ruleId":"298","severity":1,"message":"328","line":8,"column":9,"nodeType":"300","messageId":"301","endLine":8,"endColumn":17},{"ruleId":"298","severity":1,"message":"329","line":9,"column":9,"nodeType":"300","messageId":"301","endLine":9,"endColumn":13},{"ruleId":"330","severity":1,"message":"331","line":20,"column":15,"nodeType":"308","endLine":20,"endColumn":62},{"ruleId":"306","severity":1,"message":"332","line":25,"column":23,"nodeType":"308","endLine":25,"endColumn":35},{"ruleId":"306","severity":1,"message":"332","line":26,"column":23,"nodeType":"308","endLine":26,"endColumn":35},{"ruleId":"306","severity":1,"message":"332","line":27,"column":23,"nodeType":"308","endLine":27,"endColumn":35},{"ruleId":"306","severity":1,"message":"332","line":28,"column":23,"nodeType":"308","endLine":28,"endColumn":35},{"ruleId":"306","severity":1,"message":"332","line":29,"column":23,"nodeType":"308","endLine":29,"endColumn":35},{"ruleId":"292","replacedBy":"336"},{"ruleId":"294","replacedBy":"337"},{"ruleId":"298","severity":1,"message":"338","line":1,"column":17,"nodeType":"300","messageId":"301","endLine":1,"endColumn":26},{"ruleId":"298","severity":1,"message":"339","line":2,"column":38,"nodeType":"300","messageId":"301","endLine":2,"endColumn":43},{"ruleId":"298","severity":1,"message":"340","line":3,"column":10,"nodeType":"300","messageId":"301","endLine":3,"endColumn":18},{"ruleId":"298","severity":1,"message":"326","line":4,"column":10,"nodeType":"300","messageId":"301","endLine":4,"endColumn":15},{"ruleId":"298","severity":1,"message":"313","line":10,"column":9,"nodeType":"300","messageId":"301","endLine":10,"endColumn":14},{"ruleId":"298","severity":1,"message":"341","line":44,"column":24,"nodeType":"300","messageId":"301","endLine":44,"endColumn":32},{"ruleId":"298","severity":1,"message":"342","line":45,"column":24,"nodeType":"300","messageId":"301","endLine":45,"endColumn":31},{"ruleId":"298","severity":1,"message":"343","line":46,"column":10,"nodeType":"300","messageId":"301","endLine":46,"endColumn":15},{"ruleId":"298","severity":1,"message":"344","line":46,"column":17,"nodeType":"300","messageId":"301","endLine":46,"endColumn":25},{"ruleId":"298","severity":1,"message":"345","line":47,"column":10,"nodeType":"300","messageId":"301","endLine":47,"endColumn":22},{"ruleId":"298","severity":1,"message":"346","line":47,"column":24,"nodeType":"300","messageId":"301","endLine":47,"endColumn":32},{"ruleId":"347","severity":1,"message":"348","line":58,"column":6,"nodeType":"349","endLine":58,"endColumn":8,"suggestions":"350"},{"ruleId":"298","severity":1,"message":"351","line":62,"column":9,"nodeType":"300","messageId":"301","endLine":62,"endColumn":21},{"ruleId":"330","severity":1,"message":"331","line":171,"column":17,"nodeType":"308","endLine":171,"endColumn":64},{"ruleId":"306","severity":1,"message":"332","line":176,"column":21,"nodeType":"308","endLine":176,"endColumn":33},{"ruleId":"306","severity":1,"message":"332","line":177,"column":21,"nodeType":"308","endLine":177,"endColumn":33},{"ruleId":"306","severity":1,"message":"332","line":178,"column":21,"nodeType":"308","endLine":178,"endColumn":33},{"ruleId":"306","severity":1,"message":"332","line":179,"column":21,"nodeType":"308","endLine":179,"endColumn":33},{"ruleId":"306","severity":1,"message":"332","line":180,"column":21,"nodeType":"308","endLine":180,"endColumn":33},{"ruleId":"352","severity":1,"message":"353","line":21,"column":13,"nodeType":"308","endLine":21,"endColumn":17},{"ruleId":"298","severity":1,"message":"322","line":2,"column":10,"nodeType":"300","messageId":"301","endLine":2,"endColumn":16},{"ruleId":"298","severity":1,"message":"327","line":3,"column":10,"nodeType":"300","messageId":"301","endLine":3,"endColumn":23},{"ruleId":"298","severity":1,"message":"329","line":12,"column":9,"nodeType":"300","messageId":"301","endLine":12,"endColumn":13},"no-native-reassign",["354"],"no-negated-in-lhs",["355"],["354"],["355"],"no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'toast' is defined but never used.","'getDistance' is defined but never used.","'getPreciseDistance' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["354"],["355"],"'Button' is defined but never used.","'Media' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'Image' is defined but never used.","'LinkContainer' is defined but never used.","'photoUrl' is assigned a value but never used.","'href' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["354"],["355"],"'Breadcrumb' is defined but never used.",["354"],["355"],"'useEffect' is defined but never used.","'Alert' is defined but never used.","'Redirect' is defined but never used.","'setTitle' is assigned a value but never used.","'setBody' is assigned a value but never used.","'email' is assigned a value but never used.","'setemail' is assigned a value but never used.","'phone_number' is assigned a value but never used.","'setphone' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'eaders1'. Either include it or remove the dependency array.","ArrayExpression",["356"],"'handleSubmit' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation",{"desc":"357","fix":"358"},"Update the dependencies array to be: [eaders1]",{"range":"359","text":"360"},[1719,1721],"[eaders1]"]